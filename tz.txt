Проект "Сервис суточного бронирования квартир и комнат".
Этап №1
1. Создать базу данных flat_rent.
2. Создать Spring-boot проект (spring-data-jpa, web, mapstruct, lombok, checkstyle, swagger)
3. Создать спроектировать бд под хранение следующих данных:
3.1. Объект недвижимости - регион, город, улица, дом (может быть корпус), количество комнат ( только комната, 1-комнатная, 2-комнатная, 3-комнатная,
4 и более комнатная квартира)
3.2. Объявление - цена за ночь, статус (активно или архивное), ссылка на объект недвижимости, описание
3.3. Бронирование - дата начала бронирования, количество суток (больше 0), имя клиента, емайл клиента, ссылка на объявление, цена за все объявления.

Этап №2
1. Создать классы сущности, описывающие соответствующие сущности из бд.
2. Создать jpa репозитории под бд.

Этап №3
1. Создать набор endpoint /flat, который позволит:
1.1 Создавать квартиру.
1.2. Получать все квартиры (порционно) по фильтру: город + количество комнат (или только комната).
1.3 Получить квартиру по id
2. Создать набор endpoint /advert, который позволит:
2.1 Создавать объявление
2.2 Показывать объявления по фильтру (порционно): город + количество комнат + цена от + цена до.
2.3. Переводить объявления в статус архивного по id объявления.
3. Создать набор endpoint /booking, который позволит:
3.1. Позволит показывать бронирование по id
3.2. Позволит показывать свободные даты бронирования для определенного объекта. Логика: необходимо получить список бронирований по бронированию из бд,
сгенерировать все даты за этот месяц и убрать из них даты по которым уже есть бронирования.
3.3. Создавать новое бронирование (при этом проверять, что эти даты свободны).

Этап №4
1. Создать интеграционные тесты на web слой, которые покроют следующие тест кейсы (под тесты создать тестовую базу):
1.1. Квартира:
1.1.1 Успешное создание квартиры.
1.1.2 Получение квартиры и проверка корректности всех полей
1.1.3 Получение квартиры по фильтру (так же проверить корректность всех полей)
1.2. Объявление:
1.2.1 Успешное создание объявления.
1.2.2 Неудачное создания объявления в связи с несуществующей квартирой
1.2.3 Успешный поиск по фильтру
1.3. Бронирование:
1.3.1. Успешное создание бронирования
1.3.2. Неудачное создание бронирования - отсутствие объявления
1.3.3. Поиск свободных дат для бронирования для нового объявления.
2. Создать описание через swagger.